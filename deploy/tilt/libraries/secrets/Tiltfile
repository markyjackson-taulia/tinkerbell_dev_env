def secret_exists(name, namespace="default"):
    result = local("kubectl get secret --ignore-not-found -n "+namespace+" "+name, quiet=True)
    return str(result) != ""

def create_secret_if_not_exists(name, namespace="default", **kwargs):
    if secret_exists(name, namespace):
        return
    
    secret = {
        'apiVersion': 'v1',
        'kind': 'Secret',
        'metadata': {
            'name': name,
            'namespace': namespace
        },
        'type': 'Opaque',
        'stringData': {}
    }
    for key, val in kwargs.items():
        secret['stringData'][key] = val

    local('echo "'+str(encode_yaml(secret))+'" | kubectl create -f -')
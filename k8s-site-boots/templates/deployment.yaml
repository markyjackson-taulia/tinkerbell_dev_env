apiVersion: apps/v1
kind: Deployment
metadata:
  name: boots
  labels:
    k8s-app: boots
spec:
  replicas: {{ .Values.boots.replicas }}
  selector:
    matchLabels:
      k8s-app: boots
  template:
    metadata:
      labels:
        k8s-app: boots
      annotations:
#        fluentd.packet.net/efk: stdout+stderr
#        fluentd.packet.net/efk-index: boots
    spec:
      containers:
      - name: boots
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        {{- if .Values.boots.debug }}
        args:
          - "--log-level"
          - "DEBUG"
        {{- end }}
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        env:
         - name: PACKET_ENV
           value: {{ .Values.boots.PACKET_ENV }}
        envFrom:
        - secretRef:
            name: boots-env
        resources:
          limits:
            cpu: 4
            memory: 4096Mi
          requests:
            cpu: 4
            memory: 4096Mi
        ports:
        - containerPort: 67
          name: bootp
          protocol: UDP
        - containerPort: 80
          name: http
          protocol: TCP
        - containerPort: 514
          name: syslog
          protocol: UDP
        - containerPort: 69
          name: tftp
          protocol: UDP
        livenessProbe:
          httpGet:
            path: /_packet/healthcheck
            port: http
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: /_packet/healthcheck
            port: http
          initialDelaySeconds: 5

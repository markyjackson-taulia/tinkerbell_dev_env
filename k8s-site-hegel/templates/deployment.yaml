apiVersion: apps/v1
kind: Deployment
metadata:
  name: hegel
  labels:
    k8s-app: hegel
spec:
  replicas: {{ .Values.hegel.replicas }}
  selector:
    matchLabels:
      k8s-app: hegel
  template:
    metadata:
      annotations:
        fluentd.packet.net/efk: stdout+stderr
        fluentd.packet.net/efk-index: hegel
      labels:
        k8s-app: hegel
    spec:
      containers:
        - name: hegel
          env:
          - name: HEGEL_FACILITY
            value: "{{ .Values.location }}"
          - name: PACKET_ENV
            value: "{{ .Values.env }}"
          - name: PACKET_VERSION
            value: {{ .Values.image.tag | splitList "-" | last }}
          envFrom:
          - secretRef:
              name: hegel-env
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
          - containerPort: 50061
            name: http
            protocol: TCP
          - containerPort: 50060
            name: grpc
            protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /_packet/healthcheck
#              port: 80
#            initialDelaySeconds: 5
#          readinessProbe:
#            httpGet:
#              path: /_packet/healthcheck
#              port: 80
#            initialDelaySeconds: 5
          resources:
            limits:
              cpu: "1"
              memory: 2048Mi
            requests:
              cpu: "1"
              memory: 2048Mi

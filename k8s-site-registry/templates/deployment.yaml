apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  labels:
    k8s-app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: registry
  template:
    metadata:
      labels:
        k8s-app: registry
    spec:
      containers:
        - name: registry
          envFrom:
          - secretRef:
              name: registry-env
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5000
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5000
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          ports:
          - containerPort: 5000
            name: registry
            protocol: TCP
          volumeMounts:
          - name: tink-tls-keys
            readOnly: true
            mountPath: /certs/
            #          - name: registry-certs
            #            mountPath: /certs
          - name: registry-images
            mountPath: /var/lib/registry
          - name: registry-auth
            mountPath: /auth
      volumes:
      - name: tink-tls-keys
        secret:
          secretName: tink-tls-keys
          #      - name: registry-certs
          #        hostPath:
          #          path: /certs
          #          type: Directory
      - name: registry-auth
        secret:
          secretName: registry-htpasswd
      - name: registry-images
        persistentVolumeClaim:
          claimName: registry-pvc

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pbnj
  labels:
    k8s-app: pbnj
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: pbnj
  template:
    metadata:
      annotations:
        fluentd.packet.net/efk: stdout+stderr
        fluentd.packet.net/efk-index: pbnj
      labels:
        k8s-app: pbnj
    spec:
      containers:
        - name: pbnj
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          env:
#          - name: ACCESS_ID
#            valueFrom:
#              secretKeyRef:
#                name: pbnj-auth
#                key: access-id
#          - name: ACCESS_SECRET
#            valueFrom:
#              secretKeyRef:
#                name: pbnj-auth
#                key: access-secret
          - name: PACKET_ENV
            value: {{ .Values.pbnj.env.PACKET_ENV }}
          envFrom:
          - secretRef:
              name: pbnj-env
          ports:
            - name: http
              containerPort: 9090
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_packet/healthcheck
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
